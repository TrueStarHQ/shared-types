"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkAmazonProductResponse = exports.checkAmazonProductResponseRedFlagsItemConfidenceMaxTwo = exports.checkAmazonProductResponseRedFlagsItemConfidenceMinTwo = exports.checkAmazonProductResponseRedFlagsItemConfidenceMaxOne = exports.checkAmazonProductResponseRedFlagsItemConfidenceMinOne = exports.checkAmazonProductResponseRedFlagsItemConfidenceMax = exports.checkAmazonProductResponseRedFlagsItemConfidenceMin = exports.checkAmazonProductResponseGreenFlagsItemDetailsPercentageMax = exports.checkAmazonProductResponseGreenFlagsItemDetailsPercentageMin = exports.checkAmazonProductResponseGreenFlagsItemConfidenceMax = exports.checkAmazonProductResponseGreenFlagsItemConfidenceMin = exports.checkAmazonProductResponseSummaryTrustScoreMax = exports.checkAmazonProductResponseSummaryTrustScoreMin = exports.checkAmazonProductBody = exports.checkAmazonProductBodyReviewsMax = exports.checkAmazonProductBodyReviewsItemRatingMax = exports.getHealthResponse = void 0;
/**
 * Generated by orval v6.31.0 üç∫
 * Do not edit manually.
 * TrueStar API
 * API for fake review detection services
 * OpenAPI spec version: 1.0.0
 */
const zod_1 = require("zod");
/**
 * @summary Health check endpoint
 */
exports.getHealthResponse = zod_1.z
    .object({
    timestamp: zod_1.z.string().datetime(),
})
    .and(zod_1.z.object({
    status: zod_1.z.enum(["ok"]),
}));
/**
 * Analyzes a batch of Amazon product reviews to detect patterns of fake or manipulated reviews.
Returns trust score, red flags (suspicious patterns), and green flags (authenticity indicators).

The API uses LLM analysis to identify common fake review patterns such as review bombing,
repeated phrases, and excessively positive language, while also recognizing authenticity
signals like high verified purchase rates and natural rating distributions.

 * @summary Check Amazon product reviews for authenticity
 */
exports.checkAmazonProductBodyReviewsItemRatingMax = 5;
exports.checkAmazonProductBodyReviewsMax = 100;
exports.checkAmazonProductBody = zod_1.z
    .object({
    reviews: zod_1.z
        .array(zod_1.z
        .object({
        id: zod_1.z.string(),
        rating: zod_1.z
            .number()
            .min(1)
            .max(exports.checkAmazonProductBodyReviewsItemRatingMax),
        text: zod_1.z.string().min(1),
        author: zod_1.z.string(),
        verified: zod_1.z.boolean(),
        date: zod_1.z.string().optional(),
        helpfulVotes: zod_1.z.number().optional(),
        totalVotes: zod_1.z.number().optional(),
        productVariation: zod_1.z.string().optional(),
        isVineReview: zod_1.z.boolean().optional(),
        badges: zod_1.z.array(zod_1.z.string()).optional(),
    })
        .strict())
        .min(1)
        .max(exports.checkAmazonProductBodyReviewsMax),
})
    .strict();
exports.checkAmazonProductResponseSummaryTrustScoreMin = 0;
exports.checkAmazonProductResponseSummaryTrustScoreMax = 100;
exports.checkAmazonProductResponseGreenFlagsItemConfidenceMin = 0;
exports.checkAmazonProductResponseGreenFlagsItemConfidenceMax = 1;
exports.checkAmazonProductResponseGreenFlagsItemDetailsPercentageMin = 0;
exports.checkAmazonProductResponseGreenFlagsItemDetailsPercentageMax = 100;
exports.checkAmazonProductResponseRedFlagsItemConfidenceMin = 0;
exports.checkAmazonProductResponseRedFlagsItemConfidenceMax = 1;
exports.checkAmazonProductResponseRedFlagsItemConfidenceMinOne = 0;
exports.checkAmazonProductResponseRedFlagsItemConfidenceMaxOne = 1;
exports.checkAmazonProductResponseRedFlagsItemConfidenceMinTwo = 0;
exports.checkAmazonProductResponseRedFlagsItemConfidenceMaxTwo = 1;
exports.checkAmazonProductResponse = zod_1.z
    .object({
    timestamp: zod_1.z.string().datetime(),
})
    .and(zod_1.z.object({
    summary: zod_1.z.object({
        trustScore: zod_1.z
            .number()
            .min(exports.checkAmazonProductResponseSummaryTrustScoreMin)
            .max(exports.checkAmazonProductResponseSummaryTrustScoreMax),
    }),
    greenFlags: zod_1.z
        .array(zod_1.z
        .object({
        type: zod_1.z.string(),
        confidence: zod_1.z
            .number()
            .min(exports.checkAmazonProductResponseGreenFlagsItemConfidenceMin)
            .max(exports.checkAmazonProductResponseGreenFlagsItemConfidenceMax),
        details: zod_1.z.object({}),
    })
        .and(zod_1.z.object({
        type: zod_1.z.enum(["high_verified_purchases"]).optional(),
        details: zod_1.z
            .object({
            percentage: zod_1.z
                .number()
                .min(exports.checkAmazonProductResponseGreenFlagsItemDetailsPercentageMin)
                .max(exports.checkAmazonProductResponseGreenFlagsItemDetailsPercentageMax),
        })
            .optional(),
    })))
        .optional(),
    redFlags: zod_1.z
        .array(zod_1.z
        .object({
        type: zod_1.z.string(),
        confidence: zod_1.z
            .number()
            .min(exports.checkAmazonProductResponseRedFlagsItemConfidenceMin)
            .max(exports.checkAmazonProductResponseRedFlagsItemConfidenceMax),
        details: zod_1.z.object({}),
    })
        .and(zod_1.z.object({
        type: zod_1.z.enum(["review_bombing"]).optional(),
        details: zod_1.z
            .object({
            date: zod_1.z.string().date(),
            reviewCount: zod_1.z.number(),
            hoursSpan: zod_1.z.number(),
            reviewIds: zod_1.z.array(zod_1.z.string()).optional(),
        })
            .optional(),
    }))
        .or(zod_1.z
        .object({
        type: zod_1.z.string(),
        confidence: zod_1.z
            .number()
            .min(exports.checkAmazonProductResponseRedFlagsItemConfidenceMinOne)
            .max(exports.checkAmazonProductResponseRedFlagsItemConfidenceMaxOne),
        details: zod_1.z.object({}),
    })
        .and(zod_1.z.object({
        type: zod_1.z.enum(["phrase_repetition"]).optional(),
        details: zod_1.z
            .object({
            phrase: zod_1.z.string(),
            reviewIds: zod_1.z.array(zod_1.z.string()),
        })
            .optional(),
    })))
        .or(zod_1.z
        .object({
        type: zod_1.z.string(),
        confidence: zod_1.z
            .number()
            .min(exports.checkAmazonProductResponseRedFlagsItemConfidenceMinTwo)
            .max(exports.checkAmazonProductResponseRedFlagsItemConfidenceMaxTwo),
        details: zod_1.z.object({}),
    })
        .and(zod_1.z.object({
        type: zod_1.z.enum(["excessive_positivity"]).optional(),
        details: zod_1.z
            .object({
            reviewIds: zod_1.z.array(zod_1.z.string()),
            keywords: zod_1.z.array(zod_1.z.string()).optional(),
        })
            .optional(),
    }))))
        .optional(),
    metrics: zod_1.z.object({
        analyzed: zod_1.z.number(),
        total: zod_1.z.number(),
    }),
}));
//# sourceMappingURL=zod.js.map