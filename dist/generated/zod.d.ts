/**
 * Generated by orval v6.31.0 üç∫
 * Do not edit manually.
 * TrueStar API
 * API for fake review detection services
 * OpenAPI spec version: 1.0.0
 */
import { z as zod } from "zod";
/**
 * @summary Health check endpoint
 */
export declare const getHealthResponse: zod.ZodIntersection<zod.ZodObject<{
    timestamp: zod.ZodString;
}, "strip", zod.ZodTypeAny, {
    timestamp: string;
}, {
    timestamp: string;
}>, zod.ZodObject<{
    status: zod.ZodEnum<["ok"]>;
}, "strip", zod.ZodTypeAny, {
    status: "ok";
}, {
    status: "ok";
}>>;
/**
 * Analyzes a batch of Amazon product reviews to detect patterns of fake or manipulated reviews.
Returns trust score, red flags (suspicious patterns), and green flags (authenticity indicators).

The API uses LLM analysis to identify common fake review patterns such as review bombing,
repeated phrases, and excessively positive language, while also recognizing authenticity
signals like high verified purchase rates and natural rating distributions.

 * @summary Check Amazon product reviews for authenticity
 */
export declare const checkAmazonProductBodyReviewsItemRatingMax = 5;
export declare const checkAmazonProductBodyReviewsMax = 100;
export declare const checkAmazonProductBody: zod.ZodObject<{
    reviews: zod.ZodArray<zod.ZodObject<{
        id: zod.ZodString;
        rating: zod.ZodNumber;
        text: zod.ZodString;
        author: zod.ZodString;
        verified: zod.ZodBoolean;
        date: zod.ZodOptional<zod.ZodString>;
        helpfulVotes: zod.ZodOptional<zod.ZodNumber>;
        totalVotes: zod.ZodOptional<zod.ZodNumber>;
        productVariation: zod.ZodOptional<zod.ZodString>;
        isVineReview: zod.ZodOptional<zod.ZodBoolean>;
        badges: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
    }, "strict", zod.ZodTypeAny, {
        id: string;
        rating: number;
        text: string;
        author: string;
        verified: boolean;
        date?: string | undefined;
        helpfulVotes?: number | undefined;
        totalVotes?: number | undefined;
        productVariation?: string | undefined;
        isVineReview?: boolean | undefined;
        badges?: string[] | undefined;
    }, {
        id: string;
        rating: number;
        text: string;
        author: string;
        verified: boolean;
        date?: string | undefined;
        helpfulVotes?: number | undefined;
        totalVotes?: number | undefined;
        productVariation?: string | undefined;
        isVineReview?: boolean | undefined;
        badges?: string[] | undefined;
    }>, "many">;
}, "strict", zod.ZodTypeAny, {
    reviews: {
        id: string;
        rating: number;
        text: string;
        author: string;
        verified: boolean;
        date?: string | undefined;
        helpfulVotes?: number | undefined;
        totalVotes?: number | undefined;
        productVariation?: string | undefined;
        isVineReview?: boolean | undefined;
        badges?: string[] | undefined;
    }[];
}, {
    reviews: {
        id: string;
        rating: number;
        text: string;
        author: string;
        verified: boolean;
        date?: string | undefined;
        helpfulVotes?: number | undefined;
        totalVotes?: number | undefined;
        productVariation?: string | undefined;
        isVineReview?: boolean | undefined;
        badges?: string[] | undefined;
    }[];
}>;
export declare const checkAmazonProductResponseSummaryTrustScoreMin = 0;
export declare const checkAmazonProductResponseSummaryTrustScoreMax = 100;
export declare const checkAmazonProductResponseGreenFlagsItemConfidenceMin = 0;
export declare const checkAmazonProductResponseGreenFlagsItemConfidenceMax = 1;
export declare const checkAmazonProductResponseGreenFlagsItemDetailsPercentageMin = 0;
export declare const checkAmazonProductResponseGreenFlagsItemDetailsPercentageMax = 100;
export declare const checkAmazonProductResponseRedFlagsItemConfidenceMin = 0;
export declare const checkAmazonProductResponseRedFlagsItemConfidenceMax = 1;
export declare const checkAmazonProductResponseRedFlagsItemConfidenceMinOne = 0;
export declare const checkAmazonProductResponseRedFlagsItemConfidenceMaxOne = 1;
export declare const checkAmazonProductResponseRedFlagsItemConfidenceMinTwo = 0;
export declare const checkAmazonProductResponseRedFlagsItemConfidenceMaxTwo = 1;
export declare const checkAmazonProductResponse: zod.ZodIntersection<zod.ZodObject<{
    timestamp: zod.ZodString;
}, "strip", zod.ZodTypeAny, {
    timestamp: string;
}, {
    timestamp: string;
}>, zod.ZodObject<{
    summary: zod.ZodObject<{
        trustScore: zod.ZodNumber;
    }, "strip", zod.ZodTypeAny, {
        trustScore: number;
    }, {
        trustScore: number;
    }>;
    greenFlags: zod.ZodOptional<zod.ZodArray<zod.ZodIntersection<zod.ZodObject<{
        type: zod.ZodString;
        confidence: zod.ZodNumber;
        details: zod.ZodObject<{}, "strip", zod.ZodTypeAny, {}, {}>;
    }, "strip", zod.ZodTypeAny, {
        type: string;
        confidence: number;
        details: {};
    }, {
        type: string;
        confidence: number;
        details: {};
    }>, zod.ZodObject<{
        type: zod.ZodOptional<zod.ZodEnum<["high_verified_purchases"]>>;
        details: zod.ZodOptional<zod.ZodObject<{
            percentage: zod.ZodNumber;
        }, "strip", zod.ZodTypeAny, {
            percentage: number;
        }, {
            percentage: number;
        }>>;
    }, "strip", zod.ZodTypeAny, {
        type?: "high_verified_purchases" | undefined;
        details?: {
            percentage: number;
        } | undefined;
    }, {
        type?: "high_verified_purchases" | undefined;
        details?: {
            percentage: number;
        } | undefined;
    }>>, "many">>;
    redFlags: zod.ZodOptional<zod.ZodArray<zod.ZodUnion<[zod.ZodUnion<[zod.ZodIntersection<zod.ZodObject<{
        type: zod.ZodString;
        confidence: zod.ZodNumber;
        details: zod.ZodObject<{}, "strip", zod.ZodTypeAny, {}, {}>;
    }, "strip", zod.ZodTypeAny, {
        type: string;
        confidence: number;
        details: {};
    }, {
        type: string;
        confidence: number;
        details: {};
    }>, zod.ZodObject<{
        type: zod.ZodOptional<zod.ZodEnum<["review_bombing"]>>;
        details: zod.ZodOptional<zod.ZodObject<{
            date: zod.ZodString;
            reviewCount: zod.ZodNumber;
            hoursSpan: zod.ZodNumber;
            reviewIds: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
        }, "strip", zod.ZodTypeAny, {
            date: string;
            reviewCount: number;
            hoursSpan: number;
            reviewIds?: string[] | undefined;
        }, {
            date: string;
            reviewCount: number;
            hoursSpan: number;
            reviewIds?: string[] | undefined;
        }>>;
    }, "strip", zod.ZodTypeAny, {
        type?: "review_bombing" | undefined;
        details?: {
            date: string;
            reviewCount: number;
            hoursSpan: number;
            reviewIds?: string[] | undefined;
        } | undefined;
    }, {
        type?: "review_bombing" | undefined;
        details?: {
            date: string;
            reviewCount: number;
            hoursSpan: number;
            reviewIds?: string[] | undefined;
        } | undefined;
    }>>, zod.ZodIntersection<zod.ZodObject<{
        type: zod.ZodString;
        confidence: zod.ZodNumber;
        details: zod.ZodObject<{}, "strip", zod.ZodTypeAny, {}, {}>;
    }, "strip", zod.ZodTypeAny, {
        type: string;
        confidence: number;
        details: {};
    }, {
        type: string;
        confidence: number;
        details: {};
    }>, zod.ZodObject<{
        type: zod.ZodOptional<zod.ZodEnum<["phrase_repetition"]>>;
        details: zod.ZodOptional<zod.ZodObject<{
            phrase: zod.ZodString;
            reviewIds: zod.ZodArray<zod.ZodString, "many">;
        }, "strip", zod.ZodTypeAny, {
            reviewIds: string[];
            phrase: string;
        }, {
            reviewIds: string[];
            phrase: string;
        }>>;
    }, "strip", zod.ZodTypeAny, {
        type?: "phrase_repetition" | undefined;
        details?: {
            reviewIds: string[];
            phrase: string;
        } | undefined;
    }, {
        type?: "phrase_repetition" | undefined;
        details?: {
            reviewIds: string[];
            phrase: string;
        } | undefined;
    }>>]>, zod.ZodIntersection<zod.ZodObject<{
        type: zod.ZodString;
        confidence: zod.ZodNumber;
        details: zod.ZodObject<{}, "strip", zod.ZodTypeAny, {}, {}>;
    }, "strip", zod.ZodTypeAny, {
        type: string;
        confidence: number;
        details: {};
    }, {
        type: string;
        confidence: number;
        details: {};
    }>, zod.ZodObject<{
        type: zod.ZodOptional<zod.ZodEnum<["excessive_positivity"]>>;
        details: zod.ZodOptional<zod.ZodObject<{
            reviewIds: zod.ZodArray<zod.ZodString, "many">;
            keywords: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
        }, "strip", zod.ZodTypeAny, {
            reviewIds: string[];
            keywords?: string[] | undefined;
        }, {
            reviewIds: string[];
            keywords?: string[] | undefined;
        }>>;
    }, "strip", zod.ZodTypeAny, {
        type?: "excessive_positivity" | undefined;
        details?: {
            reviewIds: string[];
            keywords?: string[] | undefined;
        } | undefined;
    }, {
        type?: "excessive_positivity" | undefined;
        details?: {
            reviewIds: string[];
            keywords?: string[] | undefined;
        } | undefined;
    }>>]>, "many">>;
    metrics: zod.ZodObject<{
        analyzed: zod.ZodNumber;
        total: zod.ZodNumber;
    }, "strip", zod.ZodTypeAny, {
        analyzed: number;
        total: number;
    }, {
        analyzed: number;
        total: number;
    }>;
}, "strip", zod.ZodTypeAny, {
    summary: {
        trustScore: number;
    };
    metrics: {
        analyzed: number;
        total: number;
    };
    greenFlags?: ({
        type: string;
        confidence: number;
        details: {};
    } & {
        type?: "high_verified_purchases" | undefined;
        details?: {
            percentage: number;
        } | undefined;
    })[] | undefined;
    redFlags?: (({
        type: string;
        confidence: number;
        details: {};
    } & {
        type?: "review_bombing" | undefined;
        details?: {
            date: string;
            reviewCount: number;
            hoursSpan: number;
            reviewIds?: string[] | undefined;
        } | undefined;
    }) | ({
        type: string;
        confidence: number;
        details: {};
    } & {
        type?: "phrase_repetition" | undefined;
        details?: {
            reviewIds: string[];
            phrase: string;
        } | undefined;
    }) | ({
        type: string;
        confidence: number;
        details: {};
    } & {
        type?: "excessive_positivity" | undefined;
        details?: {
            reviewIds: string[];
            keywords?: string[] | undefined;
        } | undefined;
    }))[] | undefined;
}, {
    summary: {
        trustScore: number;
    };
    metrics: {
        analyzed: number;
        total: number;
    };
    greenFlags?: ({
        type: string;
        confidence: number;
        details: {};
    } & {
        type?: "high_verified_purchases" | undefined;
        details?: {
            percentage: number;
        } | undefined;
    })[] | undefined;
    redFlags?: (({
        type: string;
        confidence: number;
        details: {};
    } & {
        type?: "review_bombing" | undefined;
        details?: {
            date: string;
            reviewCount: number;
            hoursSpan: number;
            reviewIds?: string[] | undefined;
        } | undefined;
    }) | ({
        type: string;
        confidence: number;
        details: {};
    } & {
        type?: "phrase_repetition" | undefined;
        details?: {
            reviewIds: string[];
            phrase: string;
        } | undefined;
    }) | ({
        type: string;
        confidence: number;
        details: {};
    } & {
        type?: "excessive_positivity" | undefined;
        details?: {
            reviewIds: string[];
            keywords?: string[] | undefined;
        } | undefined;
    }))[] | undefined;
}>>;
//# sourceMappingURL=zod.d.ts.map